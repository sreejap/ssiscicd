# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
name: $(TeamProject)-$(Date:yyyyMMdd)$(Rev:-r)

variables:
    azureSubscriptionEndpoint: Teach For America
    azureResourceGroup: SED-RG
    kubernetesCluster: ssiscicdAKS

trigger:
- master

pool: default

steps:
- checkout: self  # self represents the repo where the initial Pipelines YAML file was found
  clean: true
  path: source
- task: PowerShell@1
  displayName: Build SSIS ispac file
  inputs:
    scriptType: inlineScript
    inlineScript: '& "C:\Program Files (x86)\Microsoft Visual Studio\2017\SQL\Common7\IDE\devenv.com" $(Agent.BuildDirectory)\source\SLN_AdventureWorksExample\SLN_AdventureWorksExample.sln /Build Development /project $(Agent.BuildDirectory)\source\SLN_AdventureWorksExample\AdventureWorksExample\AdventureWorksExample.dtproj /out log.txt'
- task: PublishBuildArtifacts@1
  displayName: Publish SSIS ispac file to Pipeline Build Artifacts
  inputs:
    PathtoPublish: '$(Agent.BuildDirectory)\source\SLN_AdventureWorksExample\AdventureWorksExample\bin\Development'
    ArtifactName: 'AdventureWorksExample.ispac'
    publishLocation: 'Container'
# Azure Key Vault
# Download Azure Key Vault secrets
- task: AzureKeyVault@1
  inputs:
    azureSubscription: 'Teach For America'
    KeyVaultName: 'ssiscicdAKV'
    SecretsFilter: '*'
- task: PowerShell@1
  displayName: Publish SSIS ispac file to ssiscicd Artifact feed
  inputs:
    scriptType: 'inlineScript'
    inlineScript: |
      $settingsPath = "settings.xml"; 
      Set-Content -Path $settingsPath -Value @"
      $(mvncred)
      "@;
      & "C:\Program Files\apache-maven-3.6.2\bin\mvn.cmd" -s settings.xml -Durl=https://pkgs.dev.azure.com/elizabethbaron/ssiscicd/_packaging/ssiscicd/maven/v1 -DgroupId=\"org.teachforamerica.ssiscicd.demo\" -DartifactId=ssiscicd -Dversion=1.0.$(Build.BuildId) -Dfile=$(Agent.BuildDirectory)\source\SLN_AdventureWorksExample\AdventureWorksExample\bin\Development\AdventureWorksExample.ispac -Dpackaging=ispac -DrepositoryId=dev-azure-com-elizabethbaron-ssiscicd deploy:deploy-file -e
- task: Kubernetes@1
  displayName: kubectl get namespaces
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'Teach For America'
    azureResourceGroup: '$(azureResourceGroup)'
    kubernetesCluster: '$(kubernetesCluster)'
    command: 'get'
    arguments: 'namespaces'
    outputFormat: 'yaml'
- task: Kubernetes@1
  displayName: kubectl create namespace pipeline-$(Build.BuildNumber)
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'Teach For America'
    azureResourceGroup: '$(azureResourceGroup)'
    kubernetesCluster: '$(kubernetesCluster)'
    command: 'create'
    arguments: namespace pipeline-$(Build.BuildNumber)
    outputFormat: 'yaml'
- task: Kubernetes@1
  displayName: kubectl setup secret to container registry in namespace pipeline-$(Build.BuildNumber)
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'Teach For America'
    azureResourceGroup: '$(azureResourceGroup)'
    kubernetesCluster: '$(kubernetesCluster)'
    namespace: 'pipeline-$(Build.BuildNumber)'
    command: 'create'
    arguments: 'secret docker-registry regcred --docker-server=$(docker-server) --docker-username=$(docker-username) --docker-password=$(docker-password) --docker-email=$(docker-email)'
    outputFormat: 'yaml'
- task: Kubernetes@1
  displayName: kubectl apply deployment in pipeline-$(Build.BuildNumber)
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'Teach For America'
    azureResourceGroup: '$(azureResourceGroup)'
    kubernetesCluster: '$(kubernetesCluster)'
    namespace: 'pipeline-$(Build.BuildNumber)'
    command: 'apply'
    arguments: '-f aks\mssqlssis.deployment.yaml'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
    outputFormat: 'yaml'
- task: Kubernetes@1
  displayName: kubectl get pods in pipeline-$(Build.BuildNumber)
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'Teach For America'
    azureResourceGroup: '$(azureResourceGroup)'
    kubernetesCluster: '$(kubernetesCluster)'
    namespace: 'pipeline-$(Build.BuildNumber)'
    command: 'get'
    arguments: 'pods'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
    outputFormat: 'yaml'
- task: Kubernetes@1
  displayName: kubectl create the service for the deployment in pipeline-$(Build.BuildNumber)
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'Teach For America'
    azureResourceGroup: '$(azureResourceGroup)'
    kubernetesCluster: '$(kubernetesCluster)'
    namespace: 'pipeline-$(Build.BuildNumber)'
    command: 'expose'
    arguments: 'deployment mssqlssis-deployment --type=LoadBalancer --name=mssqlssis-service --port=21433 --target-port=1433'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
    outputFormat: 'yaml'


- task: Kubernetes@1
  displayName: kubectl delete namespace pipeline-$(Build.BuildNumber)
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'Teach For America'
    azureResourceGroup: '$(azureResourceGroup)'
    kubernetesCluster: '$(kubernetesCluster)'
    command: 'delete'
    arguments: namespace pipeline-$(Build.BuildNumber)
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
    outputFormat: 'yaml'
